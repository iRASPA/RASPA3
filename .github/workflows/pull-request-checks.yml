name: test-raspa3
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  cpp-formatting:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout-repository
        uses: actions/checkout@v4

      - name: install-formatting-tools
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git ca-certificates
          sudo apt-get install -y --no-install-recommends clang-format

      - name: run-clang-format
        shell: bash
        run: |
          find src tests -name '*.cpp' -o -name '*.ixx' | xargs clang-format --dry-run --Werror

  python-formatting:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout-repository
        uses: actions/checkout@v4

      - name: set-up-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: install-black
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: run-black
        shell: bash
        run: |
          # Check formatting of Python files in raspa/ directory
          black -l 120 --check raspa/

  test-cpp:
    permissions: write-all
    runs-on: ubuntu-24.04

    steps:
      - name: checkout-repository
        uses: actions/checkout@v4

      - name: install-packages
        shell: bash
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive TZ=Europe/Amsterdam apt-get -y install tzdata
          sudo apt-get install -y --no-install-recommends git ca-certificates cmake ninja-build
          sudo apt-get install -y --no-install-recommends llvm lld clang clang-tools clang-tidy libc++-dev libc++abi-dev libomp-dev
          sudo apt-get install -y --no-install-recommends python3 pybind11-dev python3-pybind11
          sudo apt-get install -y --no-install-recommends liblapack64-dev libblas64-dev
          sudo apt-get install -y --no-install-recommends libhdf5-cpp-103-1t64 libhdf5-103-1t64 libhdf5-dev
          sudo apt-get install -y --no-install-recommends doxygen graphviz

      - name: configure-cmake-raspa3 
        shell: bash
        run: |
          cmake -B ${{github.workspace}}/build --preset linux-x86_64-core-avx2-ubuntu-24 -DBUILD_TESTING=ON

      - name: build-raspa3-and-tests
        shell: bash
        run: |
          ninja -C ${{github.workspace}}/build

      - name: run-tests
        shell: bash
        run: |
          ${{github.workspace}}/build/tests/raspakit-tests/unit_tests_raspakit --gtest_output=xml:${{github.workspace}}/testResults.xml

      - name: test-report
        uses: dorny/test-reporter@v1
        if: success() || failure()    
        with:
          name: raspa3-unit-tests
          path: ${{github.workspace}}/*Results.xml 
          reporter: java-junit
